


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
    4 00000000                 THUMB
    5 00000000                 export           exp
    6 00000000                 EXPORT           mulsum4
    7 00000000                 IMPORT           green_led_on
    8 00000000                 IMPORT           red_led_on
    9 00000000                 IMPORT           leds_off
   10 00000000         ;Be sure to export created functions
   11 00000000         
   12 00000000         
   13 00000000         
   14 00000000         
   15 00000000         
   16 00000000         
   17 00000000         ;Should perform the operation (R0+R1)^R0
   18 00000000         ;Takes the sum of R0 and R1 and multiplies it by itself 
                       R0 times (i.e. raises R0+R1 to the power of R0)
   19 00000000         ;Assume R0 is greater than 0
   20 00000000         ;Should return the result in R0
   21 00000000         ;Inputs: R0 and R1
   22 00000000         ;Outputs: R0
   23 00000000         exp
   24 00000000         
   25 00000000         ; Your code here
   26 00000000 EB00 0201       ADD              R2, R0, R1  ;R2 is A+B
   27 00000004         
   28 00000004 4603            MOV              R3, R0      ;R3 is number of ti
                                                            mes to loop
   29 00000006         
   30 00000006 4610            MOV              R0, R2      ;R0 is used for ans
                                                            wer
   31 00000008         
   32 00000008 1E5B            SUBS             R3, R3, #1  ;Looping times is e
                                                            xponent - 1
   33 0000000A         
   34 0000000A D100            BNE              loop        ;If A was not one, 
                                                            we enter loop
   35 0000000C         
   36 0000000C 4770            BX               LR
   37 0000000E         
   38 0000000E         loop
   39 0000000E         
   40 0000000E FB00 F002       MUL              R0, R0, R2  ;Multiplying Curren
                                                            t Answer * (A+B) 
   41 00000012         
   42 00000012 1E5B            SUBS             R3, R3, #1
   43 00000014         
   44 00000014 D1FB            BNE              loop
   45 00000016         
   46 00000016 4770            BX               LR
   47 00000018         
   48 00000018         
   49 00000018         
   50 00000018         ;Should perform the operation (A+B+C)*(B+C+D)*2 
   51 00000018         ;A, B, C, and D are passed in order in R0-R3
   52 00000018         ;Should return the result in R0



ARM Macro Assembler    Page 2 


   53 00000018         ;Inputs: R0, R1, R2, and R3
   54 00000018         ;Outputs: R0
   55 00000018         mulsum4
   56 00000018         
   57 00000018         ; Your code here
   58 00000018         ; Should make calls to both sum3 and mul3
   59 00000018         
   60 00000018 B500            PUSH{LR}
   61 0000001A         
   62 0000001A B40E            PUSH{R1-R3}                  ;Storing B, C, D
   63 0000001C         
   64 0000001C F000 F80C       BL               sum3        ;R0=A+B+C
   65 00000020         
   66 00000020 4684            MOV              R12, R0     ;R12=A+B+C
   67 00000022         
   68 00000022 BC07            POP{R0-R2}                   ; Retrieving R0=B  
                                                             R1=C    R2=D
   69 00000024         
   70 00000024 F000 F808       BL               sum3        ;R0=B+C+D
   71 00000028         
   72 00000028 4661            MOV              R1, R12     ;R1=A+B+C
   73 0000002A         
   74 0000002A F04F 0202       MOV              R2, #2      ;R2=2
   75 0000002E         
   76 0000002E F000 F808       BL               mul3        ;R0 = (B+C+D)*(A+B+
                                                            C)*2
   77 00000032         
   78 00000032 F85D EB04       POP{LR}
   79 00000036         
   80 00000036 4770            BX               LR
   81 00000038         
   82 00000038         
   83 00000038         
   84 00000038         
   85 00000038         ;Performs the operation R0+R1+R2
   86 00000038         ;Returns the sum in R0
   87 00000038         ;Inputs: R0, R1, and R2
   88 00000038         ;Outputs: R0
   89 00000038         sum3
   90 00000038 EB00 0301       ADD              R3, R0, R1
   91 0000003C EB02 0003       ADD              R0, R2, R3
   92 00000040 4770            BX               LR
   93 00000042         
   94 00000042         ;Should perform the operation R0*R1*R2
   95 00000042         ;Should return the product in R0
   96 00000042         ;Inputs: R0, R1, and R2
   97 00000042         ;Outputs: R0
   98 00000042         mul3
   99 00000042         
  100 00000042         ;Your code here
  101 00000042         
  102 00000042 FB00 F301       MUL              R3, R0, R1
  103 00000046 FB03 F002       MUL              R0, R3, R2
  104 0000004A 4770            BX               LR
  105 0000004C         
  106 0000004C         
  107 0000004C                 ALIGN
  108 0000004C                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw



ARM Macro Assembler    Page 3 


ork --depend=.\objects\subroutines.d -o.\objects\subroutines.o -I.\RTE\_Target_
1 -IC:\Users\Bobby\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\Device\ARM\ARMCM4\In
clude -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="_
_UVISION_VERSION SETA 529" --predefine="ARMCM4 SETA 1" --list=.\listings\subrou
tines.lst subroutines.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 3 in file subroutines.s
   Uses
      None
Comment: .text unused
exp 00000000

Symbol: exp
   Definitions
      At line 23 in file subroutines.s
   Uses
      At line 5 in file subroutines.s
Comment: exp used once
loop 0000000E

Symbol: loop
   Definitions
      At line 38 in file subroutines.s
   Uses
      At line 34 in file subroutines.s
      At line 44 in file subroutines.s

mul3 00000042

Symbol: mul3
   Definitions
      At line 98 in file subroutines.s
   Uses
      At line 76 in file subroutines.s
Comment: mul3 used once
mulsum4 00000018

Symbol: mulsum4
   Definitions
      At line 55 in file subroutines.s
   Uses
      At line 6 in file subroutines.s
Comment: mulsum4 used once
sum3 00000038

Symbol: sum3
   Definitions
      At line 89 in file subroutines.s
   Uses
      At line 64 in file subroutines.s
      At line 70 in file subroutines.s

6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

green_led_on 00000000

Symbol: green_led_on
   Definitions
      At line 7 in file subroutines.s
   Uses
      None
Comment: green_led_on unused
leds_off 00000000

Symbol: leds_off
   Definitions
      At line 9 in file subroutines.s
   Uses
      None
Comment: leds_off unused
red_led_on 00000000

Symbol: red_led_on
   Definitions
      At line 8 in file subroutines.s
   Uses
      None
Comment: red_led_on unused
3 symbols
342 symbols in table
